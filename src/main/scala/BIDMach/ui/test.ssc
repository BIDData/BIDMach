
import BIDMat.{Mat,SBMat,CMat,CSMat,DMat,FMat,IMat,LMat,HMat,GFilter,GMat,GDMat,GIMat,GLMat,GSMat,GSDMat,JSON,ND,SMat,SDMat,TMat}
import BIDMat.MatFunctions._
import BIDMat.SciFunctions._
import BIDMach.datasources._
import BIDMach.datasinks._
import BIDMach.updaters._
import BIDMach.mixins._
import BIDMach.models._
import BIDMach._
import BIDMach.networks._
import jcuda.jcudnn._
import jcuda.jcudnn.JCudnn._
import scala.util.hashing.MurmurHash3;
import java.util.HashMap;
import BIDMach.ui.Plot

val a = rand(10,100)
val c = FMat(2,100);


val (nn,opts) = Net.learnerX(a,c);

//opts.aopts = opts
opts.batchSize=20
opts.reg1weight = 0.0001
opts.npasses = 1
opts.hasBias = true
opts.links = iones(100,1);
opts.lrate = 0.4f // best for 6-layer
opts.lrate = 0.01f
opts.texp = 0.3f
opts.nweight = 1e-4f
//        opts.useGPU = false

val net = Net.dnodes4(2,500,0.5f,100,opts,2);
opts.nodeset = net

val dnn = nn.model.asInstanceOf[Net]

nn.train