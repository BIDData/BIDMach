:silent

val tt = "train";

val traindir = "../../data/ImageNet/train/";
val traindata = traindir+"partNCHW%04d.bmat.lz4";

val bsize = 1024;
//val nparts = 1252;
val nparts = 125;

var nimgs = 0L;
val msum = dzeros(3\256\256\1);

print("\nComputing mean");
val times = zeros(1,4)
for (i <- 0 until nparts) {
    tic;
    val mat = loadBMat(traindata format i);
    val t1 = toc;
    val fmat = unsignedFloat(mat);
    val t2 = toc;
    val tmpsum = fmat.sum(irow(3));
    val t3 = toc;
    msum ~ msum + DMat(tmpsum);
    val t4 = toc;
    times ~ times + row(t1,t2-t1,t3-t2,t4-t3);
    nimgs = nimgs + fmat.ncols;
    print(".");
}
println("");

msum ~ msum / nimgs.toDouble;
val means = FMat(msum);
saveFMat(traindir+"/means.fmat.lz4", means);

:silent
