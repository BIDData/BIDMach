import BIDMach.models.MHTest
setGPU(0)
val dir = "/code/BIDMach/data/uci/Higgs/parts/"
val model = MHTest.constructNNModel(4, 500, 0.6f, 1, 2);

// val proposer = MHTest.Langevin_Proposer(0.001f, 0.4f, 0.5f, 50f, model);
// val proposer = MHTest.Gradient_descent_proposer(0.01f, 0.9f, 0.4f, 0.5f, 50f, model)
val proposer = MHTest.SGHMC_proposer(0.01f, 0.1f, 0.4f, 0.5f, 50f, 0.9f, 200, model)

val ecdf = loadFMat("./data/EcdfForMHtest/cdfmat.txt")
val hash_cdf = loadFMat("./data/EcdfForMHtest/sdmat.txt")



val (nn, opts) = MHTest.learner(dir+"data%03d.fmat.lz4", dir+"label%03d.fmat.lz4", model, proposer, ecdf, hash_cdf)

opts.num_data_est_sd = 10
opts.npasses = 1
opts.nend = 10
opts.evalStep = 311;
opts.is_always_accpet = false

nn.train

model.copyFrom(nn.model)
val ta = loadFMat(dir + "data%03d.fmat.lz4" format 10);
val tc = loadFMat(dir + "label%03d.fmat.lz4" format 10);

val (mm,mopts) = Net.predictor(model, ta);

mopts.batchSize=1000

mm.predict


val pc = FMat(mm.preds(0))

val rc = roc(pc, tc, 1-tc, 1000);

mean(rc)
