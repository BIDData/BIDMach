import BIDMat.{CMat,CSMat,DMat,Dict,FMat,FND,GMat,GDMat,GIMat,GLMat,GSMat,GSDMat,GND,HMat,IDict,Image,IMat,LMat,Mat,SMat,SBMat,SDMat,TMat}
import BIDMat.MatFunctions._
import BIDMat.SciFunctions._
import BIDMat.Solvers._
import BIDMat.Plotting._
import BIDMach.Learner
import BIDMach.models.{Click,FM,GLM,KMeans,KMeansw,LDA,LDAgibbs,Model,NMF,SFA,RandomForest,SVD}
import BIDMach.networks.{Net}
import BIDMach.datasources.{DataSource,MatSource,FileSource,SFileSource}
import BIDMach.datasinks.{DataSink,MatSink}
import BIDMach.mixins.{CosineSim,Perplexity,Top,L1Regularizer,L2Regularizer}
import BIDMach.updaters.{ADAGrad,Batch,BatchNorm,Grad,IncMult,IncNorm,Telescoping}
import BIDMach.causal.{IPTW}
import BIDMach.allreduce.{Master,Worker,Command}
import BIDMach.models.GLM

Mat.checkMKL(false)
Mat.checkCUDA

val mdir = "/mnt/BIDMach/data/MNIST8M/parts/"
val (nn, opts) = RandomForest.learner(mdir+"data%02d.fmat.lz4", mdir+"cats%02d.imat.lz4")

opts.nend = 70
opts.batchSize = 20000
opts.depth = 30
opts.ntrees = (32 / 4)
opts.nsamps = 32
opts.nnodes = 500000
opts.nbits = 16
opts.gain = 0.001f
opts.ncats = 10

val w = new Worker()
val wopts = w.opts
wopts.trace = 4
wopts.machineTrace = 1

w.start(nn)

nn.paused = true
