import BIDMat.{CMat,CSMat,DMat,Dict,FMat,FND,GMat,GDMat,GIMat,GLMat,GSMat,GSDMat,GND,HMat,IDict,Image,IMat,LMat,Mat,SMat,SBMat,SDMat,TMat}
import BIDMat.MatFunctions._
import BIDMat.SciFunctions._
import BIDMat.Solvers._
import BIDMat.Plotting._
import BIDMach.Learner
import BIDMach.models.{Click,FM,GLM,KMeans,KMeansw,LDA,LDAgibbs,Model,NMF,SFA,RandomForest,SVD}
import BIDMach.networks.{Net}
import BIDMach.datasources.{DataSource,MatSource,FileSource,SFileSource}
import BIDMach.datasinks.{DataSink,MatSink}
import BIDMach.mixins.{CosineSim,Perplexity,Top,L1Regularizer,L2Regularizer}
import BIDMach.updaters.{ADAGrad,Batch,BatchNorm,Grad,IncMult,IncNorm,Telescoping}
import BIDMach.causal.{IPTW}
import BIDMach.allreduce.{Master,Worker,Command}
import BIDMach.models.GLM

Mat.checkMKL(false)
Mat.checkCUDA
Mat.useCache = false
Mat.useGPUcache = true

val mdir = "/mnt/BIDMach/data/criteo/parts/"

val (nn,opts) = GLM.learner(mdir+"trainsorted%02d.smat.lz4", mdir+"trainlabel%02d.fmat.lz4")
opts.nend = 80
opts.batchSize = 10000
opts.lrate = 0.05f
opts.texp = 0.5f
opts.reg1weight = 0.0f
opts.npasses = 10
opts.useGPU = true
opts.links = irow(1)
opts.aopts = opts
opts.lookahead = 0

val w = new Worker()
val wopts = w.opts
wopts.trace = 0
wopts.machineTrace = 0

w.start(nn)

nn.paused = true
