// Script to test out BayesNet.scala for the general case.

// BayesNet.scala now assuming general case.

// This is Huasha's data
//val dag = loadSMat("data/sortedDag.lz4");
//val data = loadSMat("data/sdata_normal.lz4")
//val states = loadIMat("data/states.lz4")

// This is the data I'm using, following Daphne's example DAG
val data_10perc = loadSMat("data/bayesnet_student_data/dataStudentTrain100k10perc.lz4")
val data_50perc = loadFMat("data/bayesnet_student_data/dataStudent50Perc1mil.lz4")
val all = loadFMat("data/bayesnet_student_data/dataStudent_1000000.txt")
val realdata = all(?, 0 until 50000)
realdata <-- (realdata + 1)
val (ii,jj,kk) = find3(realdata)
val data_full = sparse(ii,jj,kk,5,50000)

val dag = loadSMat("data/bayesnet_student_data/dagStudent.lz4")
val states = loadIMat("data/bayesnet_student_data/statesStudent.lz4")

// Replace the data here with data_10perc, data_50perc, or data_full
val (nn , opts) = BIDMach.models.BayesNet.learner(states , dag , data_50perc)
opts.npasses = 10
opts.useGPU = true
opts.what
nn.train
nn.modelmats(0).t
